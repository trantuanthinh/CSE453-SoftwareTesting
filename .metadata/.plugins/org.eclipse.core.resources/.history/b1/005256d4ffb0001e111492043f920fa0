import static org.junit.jupiter.api.Assertions.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.lang.reflect.Method;

import org.junit.jupiter.api.Test;

class FibonacciTest {

	@Test
	void testMainMethodExists() {
		try {
			Class<?> className = Class.forName("Fibonacci");
			Method mainMethod = className.getMethod("main", String[].class);
		}catch(ClassNotFoundException e) {
			assertTrue(false,"Class not found");
		}catch (NoSuchMethodException e) {
			assertTrue(false, "Main method not found");
		}
	}

	@Test
	void testValidInput() {
		//Testcase 1: n = 5 => result: 12
		try {
			String input1 = "5";
			ByteArrayInputStream in1 = new ByteArrayInputStream(input1.getBytes());
			System.setIn(in1);
			ByteArrayOutputStream out1 = new ByteArrayOutputStream();
			System.setOut(new PrintStream(out1));
			String[] args1 = {};
			Fibonacci.main(args1);
			String consoleOutput = "12" + System.getProperty("line.separator");
			assertEquals(consoleOutput, out1.toString());
		}catch(Error e) {
			assertTrue(false,"Need an Integer");
		}
	}
}
